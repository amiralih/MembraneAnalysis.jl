var documenterSearchIndex = {"docs":
[{"location":"density_analysis.html#Density-Analysis","page":"Density Analysis","title":"Density Analysis","text":"","category":"section"},{"location":"density_analysis.html","page":"Density Analysis","title":"Density Analysis","text":"lipids_density_spectrum","category":"page"},{"location":"density_analysis.html#MembraneAnalysis.lipids_density_spectrum","page":"Density Analysis","title":"MembraneAnalysis.lipids_density_spectrum","text":"lipids_density_spectrum(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_file,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    L_grid)\n\nCalculates lateral density (number per cell) spectrum of lipids in a lipid bilayer simulation trajectory and saves the results as a HDF5 file with labels XXXX_1 and XXXX_2 for lipid \"XXXX\" in the two leaflets.\n\nKeyword arguments\n\npdf_file: PDB structure file;\ntraj_file: trajectory file;\nfs_file: flucuation spectrum file;\noutput_file: output HDF5;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nL_grid: length of the lattice grid used to discretize the surface.\n\n\n\n\n\n","category":"function"},{"location":"density_analysis.html","page":"Density Analysis","title":"Density Analysis","text":"peptide_density_spectrum","category":"page"},{"location":"density_analysis.html#MembraneAnalysis.peptide_density_spectrum","page":"Density Analysis","title":"MembraneAnalysis.peptide_density_spectrum","text":"peptide_density_spectrum(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_file,\n    lipids,\n    ref_residue,\n    L_grid)\n\nCalculates lateral density (number per cell) spectrum of the peptide using the CA atom of its reference residue and saves the results as a HDF5 file with labels PEP_1 and PEP_2 for the two leaflets.\n\nKeyword arguments\n\npdf_file: PDB structure file;\ntraj_file: trajectory file;\nfs_file: flucuation spectrum file;\noutput_file: output HDF5;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_residue: residue number of the reference residue of the peptide;\nL_grid: length of the lattice grid used to discretize the surface.\n\n\n\n\n\n","category":"function"},{"location":"density_analysis.html","page":"Density Analysis","title":"Density Analysis","text":"lipids_radial_distribution","category":"page"},{"location":"density_analysis.html#MembraneAnalysis.lipids_radial_distribution","page":"Density Analysis","title":"MembraneAnalysis.lipids_radial_distribution","text":"lipids_radial_distribution(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_file,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    lipid_A,\n    lipid_B,\n    max_r=20,\n    n_bins=200,\n    same_leaflet=true)\n\nCalculates the lateral (2-D) radial density function of lipid A and lipid B in a lipid bilayer simulation trajectory.\n\nKeyword arguments\n\npdf_file: PDB structure file;\ntraj_file: trajectory file;\nfs_file: flucuation spectrum file;\noutput_file: output file (density as a function of histogram bin center);\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nlipid_A: the lipid distance is measured from;\nlipid_B: the lipid distance is measured to;\nmax_r: maxumum radius (20 by default);\nn_bins: number of histogram bins (200 by default);\nsame_leaflet: calculate RDF between lipids in the same leaflet (apposing leaflet if false).\n\n\n\n\n\n","category":"function"},{"location":"density_analysis.html","page":"Density Analysis","title":"Density Analysis","text":"peptide_radial_distribution","category":"page"},{"location":"density_analysis.html#MembraneAnalysis.peptide_radial_distribution","page":"Density Analysis","title":"MembraneAnalysis.peptide_radial_distribution","text":"peptide_radial_distribution(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_file,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    ref_residue,\n    lipid,\n    max_r=20,\n    n_bins=200,\n    same_leaflet=true)\n\nCalculates the lateral (2-D) radial density function of peptide and a lipid in a lipid bilayer simulation trajectory.\n\nKeyword arguments\n\npdf_file: PDB structure file;\ntraj_file: trajectory file;\nfs_file: flucuation spectrum file;\noutput_file: output file (density as a function of histogram bin center);\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nref_residue: residue number of the reference residue of the peptide;\nlipid: the lipid distance is measured to;\nmax_r: maxumum radius (20 by default);\nn_bins: number of histogram bins (200 by default);\nsame_leaflet: calculate RDF between lipids in the same leaflet (apposing leaflet if false).\n\n\n\n\n\n","category":"function"},{"location":"interactions.html#Interactions","page":"Interactions","title":"Interactions","text":"","category":"section"},{"location":"interactions.html","page":"Interactions","title":"Interactions","text":"count_interactions","category":"page"},{"location":"interactions.html#MembraneAnalysis.count_interactions","page":"Interactions","title":"MembraneAnalysis.count_interactions","text":"count_interactions(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_file,\n    lipids,\n    donors=[(lipid, lipid.head_atom) for lipid in lipids],\n    acceptors=[(lipid, \"PO4\") for lipid in lipids],\n    cutoff=6.0)\n\nCounting the number of interactions (such as H-bonds) defined as a donor lipid atom being closer than the cutoff to a acceptor lipid atom. Saves the results in an HDF5 file with the label tag.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_file: output directory;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\ndonors: list of tuples of lipids (from type Lipid) and atoms to be considered as interaction donors;\nacceptors: list of tuples of lipids (from type Lipid) and atoms to be considered as interaction acceptors;\ncutoff: interaction distance cutoff.\n\n\n\n\n\n","category":"function"},{"location":"thickness_analysis.html#Thickness-Analysis","page":"Thickness Analysis","title":"Thickness Analysis","text":"","category":"section"},{"location":"thickness_analysis.html","page":"Thickness Analysis","title":"Thickness Analysis","text":"lipids_thickness_spectrum","category":"page"},{"location":"thickness_analysis.html#MembraneAnalysis.lipids_thickness_spectrum","page":"Thickness Analysis","title":"MembraneAnalysis.lipids_thickness_spectrum","text":"lipids_thickness_spectrum(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_dir,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    q_max)\n\nCalculates thickness spectrum of the lipids using their reference atom position. Assumes square (Lx = Ly) bilayer. Results for lipid \"XXXX\" will be stored in XXXX_tqs.dat in the output directory.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_dir: output directory;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nq_max: maximum q mode magnitude value to be used.\n\n\n\n\n\n","category":"function"},{"location":"thickness_analysis.html","page":"Thickness Analysis","title":"Thickness Analysis","text":"peptide_thickness_spectrum","category":"page"},{"location":"thickness_analysis.html#MembraneAnalysis.peptide_thickness_spectrum","page":"Thickness Analysis","title":"MembraneAnalysis.peptide_thickness_spectrum","text":"peptide_thickness_spectrum(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_file,\n    lipids,\n    ref_residue),\n    q_max)\n\nCalculates thickness spectrum of the peptide using the CA atom of its reference residue. Assumes square (Lx = Ly) bilayer.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_file: output file;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_residue: residue number of the reference residue of the peptide;\nq_max: maximum q mode magnitude value to be used.\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html#Curvature-Analysis","page":"Curvature Analysis","title":"Curvature Analysis","text":"","category":"section"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"curvature","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.curvature","page":"Curvature Analysis","title":"MembraneAnalysis.curvature","text":"curvature(;\n    point,\n    hq,\n    box_dims,\n    q_max,\n    q_min=0)\n\nCalculates curvature per mode of a point from fluctuation spectrum.\n\nKeyword arguments\n\npoint: ordered pair of X and Y values;\nhq: 2D matrix of height fluctuation spectrum;\nbox_dims: ordered pair of simulation box Lx and Ly values;\nq_max: maximum q mode magnitude value to be used.\nq_min: minimum q mode magnitude value to be used (zero by default).\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"lipids_sampled_curvature","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.lipids_sampled_curvature","page":"Curvature Analysis","title":"MembraneAnalysis.lipids_sampled_curvature","text":"lipids_sampled_curvature(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_dir,\n    lipids,\n    q_max,\n    q_min=0)\n\nCalculates mean sampled curvature of heavy atoms of each lipid. Results for lipid \"XXXX\" will be stored in XXXX_cs.dat in the output directory.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_dir: output directory;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nq_max: maximum q mode magnitude value to be used.\nq_min: minimum q mode magnitude value to be used (zero bu default).\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"peptide_sampled_curvature","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.peptide_sampled_curvature","page":"Curvature Analysis","title":"MembraneAnalysis.peptide_sampled_curvature","text":"peptide_sampled_curvature(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_dir,\n    lipids,\n    q_max)\n\nCalculates mean sampled curvature of CA atoms of peptide residues. \n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_file: output file;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nn_residues: number of residues in the peptide;\nq_max: maximum q mode magnitude value to be used.\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"lipids_curvature_spectrum","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.lipids_curvature_spectrum","page":"Curvature Analysis","title":"MembraneAnalysis.lipids_curvature_spectrum","text":"lipids_curvature_spectrum(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_dir,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    q_max,\n    q_min,\n    nqs)\n\nCalculates curvature spectrum of the lipids using their reference atom position. Assumes square (Lx = Ly) bilayer. Results for lipid \"XXXX\" will be stored in XXXX_cqs.dat in the output directory.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_dir: output directory;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nq_max: maximum q mode magnitude value to be used;\nq_min: minimum q mode magnitude value to be used;\nnqs: number of segments to divide the q range from qmin to qmax;\ntag_files: a list of corresponding lipid interaction tag files of the trajectory files. Uses all lipids by default;\ntag_id: the tag id of the selected lipids.\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"peptide_curvature_spectrum","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.peptide_curvature_spectrum","page":"Curvature Analysis","title":"MembraneAnalysis.peptide_curvature_spectrum","text":"peptide_curvature_spectrum(;\n    pdb_file,\n    traj_files,\n    fs_files,\n    output_file,\n    lipids,\n    ref_residue),\n    q_max)\n\nCalculates curvature spectrum of the peptide using the CA atom of its reference residue. Assumes square (Lx = Ly) bilayer.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_files: a list of trajectory files;\nfs_files: a list of corresponding HDF5 fluctuation spectrum files of the trajectory files;\noutput_file: output file;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_residue: residue number of the reference residue of the peptide;\nq_max: maximum q mode magnitude value to be used.\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"TCB_analysis","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.TCB_analysis","page":"Curvature Analysis","title":"MembraneAnalysis.TCB_analysis","text":"TCB_analysis(;\n    input_dir,\n    lipids,\n    weights=ones(length(lipids)) ./ length(lipids),\n    z_cutoff,\n    area=readdlm(input_dir * \"A.dat\")[1],\n    output_dir,\n    tcb_plot=false)\n\nCalculates bilayer bending rigidity modulus and mean sampled curvature of lipids relative to a weighted average from transverse curvature bias analysis. Optionally plots mean sampled curvature of atoms of each lipid as a function of height.\n\nKeyword arguments\n\ninput_dir: directory with lipid atoms height and curvature files (e.g. XXXX_zs.dat and XXXX_cs.dat for lipid \"XXXX\");\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nweights: a list of the same size as lipids, determining the weight of each lipid's TCB curve in the analysis. (Should be equal to the fraction of bilayer area covered by that lipid. Will be equal by default.);\nz_cutoff: cutoff height to exclude anomalous behavior near lipid head region;\narea: bilayer area, will be read from A.dat in input_dir by default;\noutput_dir: output directory;\ntcb_plot: saves a plot (TCB_plot.pdf) in output_dir if true.\n\n\n\n\n\n","category":"function"},{"location":"curvature_analysis.html","page":"Curvature Analysis","title":"Curvature Analysis","text":"hq2_analysis","category":"page"},{"location":"curvature_analysis.html#MembraneAnalysis.hq2_analysis","page":"Curvature Analysis","title":"MembraneAnalysis.hq2_analysis","text":"hq2_analysis(;\n    input_dir,\n    n_points=size(readdlm(input_dir * \"hq2.dat\"))[1],\n    area=readdlm(input_dir * \"A.dat\")[1],\n    model=\"TD\",\n    output_dir,\n    hq2_plot=false)\n\nCalculates bilayer bending rigidity modulus by fitting |q|^4 × <|hq|^2> vs |q| data to the chosen model. Available models are \"HC\" (Helfrich-Canham), \"MNK\" (May-Narang-Kopelevich), or \"TD\" (Terzi-Deserno), as denoted by equations (36), (37), and (47) respectively in the following paper:\n\nhttps://doi.org/10.1063/1.4990404\n\nSaves the results to kc_hq2.dat in output_dir and optionally plots the fit.\n\nKeyword arguments\n\ninput_dir: input directory containing hq2.dat;\nn_points: number of |q| data points to use (uses all by default);\nmodel: chosen theoretical model to fit <|hq|^2> vs |q|;\narea: bilayer area, will be read from A.dat in input_dir by default;\noutput_dir: output directory;\nhq2_plot: saves a plot (hq2_plot.pdf) in output_dir if true.\n\n\n\n\n\n","category":"function"},{"location":"lipids.html#Lipids","page":"Lipids","title":"Lipids","text":"","category":"section"},{"location":"lipids.html","page":"Lipids","title":"Lipids","text":"New lipid species can be defined using the Lipid struct.","category":"page"},{"location":"lipids.html","page":"Lipids","title":"Lipids","text":"Lipid","category":"page"},{"location":"lipids.html#MembraneAnalysis.Lipid","page":"Lipids","title":"MembraneAnalysis.Lipid","text":"Lipid(\n    name,\n    head_atom,\n    ref_atom,\n    tail_atom,\n    n_atoms)\n\nA struct describing lipid species present in the system.\n\nFields\n\nname: lipid name;\nhead_atom: the head atom of the lipid (has to be the first atom in the PDB file);\nref_atom: default reference atom for determining the position of the lipid;\ntail_atom: a tail atom of the lipid (does not have to be the last atom in the PDB file);\nn_atoms: number of atoms in the lipid.\n\n\n\n\n\n","category":"type"},{"location":"utilities.html#Utilities","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"atom_leaflet","category":"page"},{"location":"utilities.html#MembraneAnalysis.atom_leaflet","page":"Utilities","title":"MembraneAnalysis.atom_leaflet","text":"atom_leaflet(;\n    pdb_file,\n    lipids)\n\nDetermines the leaflet of each atom of the lipid in a bilayer based on vertical position of the head atoms in the PDB structure file. Outputs an array of ±1s.\n\nKeyword arguments\n\npdb_file: PDB file;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"atom_leaflet_dynamic","category":"page"},{"location":"utilities.html#MembraneAnalysis.atom_leaflet_dynamic","page":"Utilities","title":"MembraneAnalysis.atom_leaflet_dynamic","text":"atom_leaflet_dynamic(;\n    coords,\n    zs_m,\n    Ls,\n    pdb_file,\n    lipids)\n\nDynamically determines the leaflet of each atom of the lipid in a bilayer based on vertical position of the head atoms in the trajectory coordinates. Outputs an array of ±1s.\n\nKeyword arguments\n\ncoords: a 3 × N array of N atoms coordinates;\nzs_m: bilayer midplane height;\nLs: a tuple of the (Lx, Ly) dimensions of the box;\npdb_file: PDB file;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"box_dimensions","category":"page"},{"location":"utilities.html#MembraneAnalysis.box_dimensions","page":"Utilities","title":"MembraneAnalysis.box_dimensions","text":"box_dimensions(;\n    traj_file,\n    area_file=\"\",\n    box_dims_file=\"\")\n\nCalculates mean dimensions of the simulation box.\n\nKeyword arguments\n\ntraj_file: trajectory file;\narea_file: save area if not empty;\nbox_dims_file: save simulation box dimensions if not empty;\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"blocking_error","category":"page"},{"location":"utilities.html#MembraneAnalysis.blocking_error","page":"Utilities","title":"MembraneAnalysis.blocking_error","text":"blocking_error(a, n=10)\n\nCalculates standard error of the mean for an array a divided in n blocks.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"lipids_atoms_height","category":"page"},{"location":"utilities.html#MembraneAnalysis.lipids_atoms_height","page":"Utilities","title":"MembraneAnalysis.lipids_atoms_height","text":"lipids_atoms_height(;\n    pdb_file,\n    traj_file,\n    fs_file,\n    output_dir,\n    lipids)\n\nCalculates the average distance of heavy atoms of each lipid from the midplane. Results for lipid \"XXXX\" will be saved to XXXX_zs.dat in output_dir.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_file: trajectory file;\nfs_file: fluctuation spectrum file;\noutput_dir: output directory;\nlipids: a list of lipids of type Lipid as defined in lipids.jl.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"peptide_atoms_height","category":"page"},{"location":"utilities.html#MembraneAnalysis.peptide_atoms_height","page":"Utilities","title":"MembraneAnalysis.peptide_atoms_height","text":"peptide_atoms_height(;\n    pdb_file,\n    traj_file,\n    output_file,\n    lipids,\n    n_residues)\n\nCalculates average distance of CA atoms of each residue of peptide from the midplane.\n\nKeyword arguments\n\npdb_file: PDB structure file;\ntraj_file: trajectory file;\noutput_file: output file;\nlipids: a list of lipids of type Lipid as defined in lipids.jli;\nn_residues: number of residues in the peptide.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"get_index_pairs","category":"page"},{"location":"utilities.html#MembraneAnalysis.get_index_pairs","page":"Utilities","title":"MembraneAnalysis.get_index_pairs","text":"get_index_pairs(N)\n\nCalculates all (n, m) index pairs and corresponding v = √(n^2 + m^2) values where v ≤ N.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"find_ref_atoms","category":"page"},{"location":"utilities.html#MembraneAnalysis.find_ref_atoms","page":"Utilities","title":"MembraneAnalysis.find_ref_atoms","text":"find_ref_atoms(;\n    input_dir,\n    lipids,\n    z,\n    tolerance=2)\n\nDetermines the nearest atom to a determined height (such as the neutral surface) for each lipid and returns a dictionary.\n\nKeyword arguments\n\ninput_dir: directory with lipid atoms height files (e.g. XXXX_zs.dat for lipid \"XXXX\");\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nz: refrence surface height;\ntolerance: maximum distance from z accepted, will produce a warning if exceeded.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"Utilities","title":"Utilities","text":"voronoi_shells","category":"page"},{"location":"utilities.html#MembraneAnalysis.voronoi_shells","page":"Utilities","title":"MembraneAnalysis.voronoi_shells","text":"voronoi_shells(;\n    points,\n    box_dims,\n    center,\n    n_shells)\n\nDetermines the voronoi shells around a center point from a set of 2-D points (not including the center). Returns a dictionary with a list of point indices for each shell.\n\nKeyword arguments\n\npoints: a 2×N array of X and Y coordinates of the N points;\nbox_dims: a tuple of simulation box lateral dimensions, Lx and Ly;\ncetner: coordinates of the center point;\nn_shells: number of voronoi shells to be determined.\n\n\n\n\n\n","category":"function"},{"location":"fluctuation_analysis.html#Fluctuation-Analysis","page":"Fluctuation Analysis","title":"Fluctuation Analysis","text":"","category":"section"},{"location":"fluctuation_analysis.html","page":"Fluctuation Analysis","title":"Fluctuation Analysis","text":"fluctuation_spectrum","category":"page"},{"location":"fluctuation_analysis.html#MembraneAnalysis.fluctuation_spectrum","page":"Fluctuation Analysis","title":"MembraneAnalysis.fluctuation_spectrum","text":"fluctuation_spectrum(;\n    pdb_file,\n    traj_file,\n    output_file,\n    lipids,\n    ref_atoms=Dict(lipid => lipid.ref_atom for lipid in lipids),\n    L_grid)\n\nCalculates the height and thickness fluctuation spectrum of a lipid bilayer simulation trajectory and saves the results as a HDF5 file with labels hq and tq.\n\nKeyword arguments\n\npdf_file: PDB structure file;\ntraj_file: trajectory file;\noutput_file: output HDF5;\nlipids: a list of lipids of type Lipid as defined in lipids.jl;\nref_atoms: a dictionary of reference atoms for each lipid;\nL_grid: length of the lattice grid used to discretize the surface.\n\n\n\n\n\n","category":"function"},{"location":"fluctuation_analysis.html","page":"Fluctuation Analysis","title":"Fluctuation Analysis","text":"area_expansion_modulus","category":"page"},{"location":"fluctuation_analysis.html#MembraneAnalysis.area_expansion_modulus","page":"Fluctuation Analysis","title":"MembraneAnalysis.area_expansion_modulus","text":"area_expansion_modulus(;\n    traj_files,\n    output_file)\n\nCalculates area expansion modulus in units of kBT per square of length unit in trajectories (e.g., Å^2).\n\nKeyword arguments\n\ntraj_files: a list of trajectory files;\noutput_file: output file to save the result.\n\n\n\n\n\n","category":"function"},{"location":"fluctuation_analysis.html","page":"Fluctuation Analysis","title":"Fluctuation Analysis","text":"fluctuation_hq2_data","category":"page"},{"location":"fluctuation_analysis.html#MembraneAnalysis.fluctuation_hq2_data","page":"Fluctuation Analysis","title":"MembraneAnalysis.fluctuation_hq2_data","text":"fluctuation_hq2_data(;\n    box_dims,\n    fs_files,\n    output_dir,\n    q_max)\n\nCalculates |hq|^2 vs |q| data from fluctuation spectrum. Assumes square (Lx = Ly) bilayer. Saves results to hq2.dat in output_dir.\n\nKeyword arguments\n\nbox_dims: ordered pair of lateral simulation box dimensions, Lx and Ly;\nfs_files: a list of HDF5 fluctuation spectrum files;\noutput_dir: output directory;\nq_max: maximum q mode magnitude value to be used.\n\n\n\n\n\n","category":"function"},{"location":"index.html#MembraneAnalysis.jl","page":"Introduction","title":"MembraneAnalysis.jl","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"MembraneAnalysis.jl is a Julia package for analyzing simulations of multi-component lipid bilayers. For membranes simulated in a flat geometry, fluctuation modes of membrane surface height, membrane thickness, and lateral distributions of membrane species can be calculated to be used in determining the mechanical properties of the membrane. The package includes functionality to utilize a novel theoretical framework (1, 2) to determine the spatial extent of the influence of a single lipid molecule (or embedded protein) on the mechanical properties of the surrounding membrane, which allows us to determine curvature and thickness preference of membrane species, as well as spatial correlations between them.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"MembraneAnalysis.jl is designed to be used by biophysical researchers in need of a fast analysis tool that can be easily built upon to enable implementation of new computational methods to guide theoretical descriptions of membrane physics.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Some of the membrane properties that MembraneAnalysis.jl can determine include:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Bending modulus of the membrane via multiple fluctuation-based approaches\nArea expansion modulus of the membrane\nRelative spontanous curvature of the lipid species\nNuetral surface of the membrane\nRelative thickness preference of the lipid species","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"note: Basic Tutorial\nA tutorial demonstrating an example usage of the package can be found here.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"tip: Input Data Organization\nThe files used as input data by the functions in this package include (a subset of):a PDB structure file of the membrane simulation\na trajectory file of the membrane simulation (of any format supported by the Chemfiles.jl package), or a list of multiple trajectory files\nfiles containing intermediate values generated as output by other functions in the package (either plain text files with the .dat extension, or HDF5 binary data files with .h5 extension)We recommend placing the structure file and trajectory file(s) in same directory where the code is run from, and store the generated output files in the same folder as well.If you have multiple trajectory files representing consecutive segments of a simulation, make sure that your input list of trajectory files is in the correct order if you wish to use the error estimates for the output values that are calculated using the blocking method (3).","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pages = [\"fluctuation_analysis.md\",\n         \"curvature_analysis.md\",\n         \"thickness_analysis.md\",\n         \"lipids.md\",\n         \"density_analysis.md\",\n         \"interactions.md\",\n         \"utilities.md\"]","category":"page"}]
}
